{"ast":null,"code":"/* eslint-disable import/no-anonymous-default-export */\nimport axios from \"axios\";\nexport const events = {\n  state: {\n    events: [],\n    selected: [],\n    refreshing: false,\n    isBusy: true\n  },\n  reducers: {\n    updateState(state, payload) {\n      return { ...state,\n        ...payload\n      };\n    }\n\n  },\n  effects: dispatch => ({\n    async list({\n      refresh,\n      ...payload\n    } = {}) {\n      //   try {\n      //     // await verifyServices.sendEmailID( { email: email } );\n      //     axios.get(\"http://localhost:8000/events\").then((response) => {\n      //       console.log(response.data);\n      //       // setEventsList(response.data);\n      //       this.updateState({ payload });\n      //     });\n      //   } catch (error) {\n      //     console.log(\"nasend na may error\");\n      //     console.warn(error);\n      //     //   setStatus(\"Completed\");\n      //   }\n      try {\n        this.updateState({\n          refreshing: refresh,\n          isBusy: true\n        });\n        const result = await axios.get(\"http://localhost:8000/events\");\n        this.updateState({\n          events: result.data,\n          isBusy: false,\n          refreshing: false\n        });\n        console.log(\"res\", result.data);\n      } catch (err) {\n        this.updateState({\n          errorMessage: err.message,\n          isBusy: false,\n          refreshing: false\n        });\n      }\n    },\n\n    setEvents({\n      events = []\n    }) {\n      console.log(\"check check\");\n      this.updateState({\n        events\n      });\n      console.log(\"events na natapos\", events);\n    },\n\n    setSelected({\n      selected = []\n    }) {\n      this.updateState({\n        selected\n      });\n      console.log(\"select na natapos\", selected);\n    }\n\n  })\n};","map":{"version":3,"sources":["C:/Users/Xurpas/calendar-app/src/models/events.js"],"names":["axios","events","state","selected","refreshing","isBusy","reducers","updateState","payload","effects","dispatch","list","refresh","result","get","data","console","log","err","errorMessage","message","setEvents","setSelected"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,MAAM,GAAG;AACpBC,EAAAA,KAAK,EAAE;AACLD,IAAAA,MAAM,EAAE,EADH;AAELE,IAAAA,QAAQ,EAAE,EAFL;AAILC,IAAAA,UAAU,EAAE,KAJP;AAKLC,IAAAA,MAAM,EAAE;AALH,GADa;AAQpBC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,WAAW,CAACL,KAAD,EAAQM,OAAR,EAAiB;AAC1B,aAAO,EAAE,GAAGN,KAAL;AAAY,WAAGM;AAAf,OAAP;AACD;;AAHO,GARU;AAapBC,EAAAA,OAAO,EAAGC,QAAD,KAAe;AACtB,UAAMC,IAAN,CAAW;AAAEC,MAAAA,OAAF;AAAW,SAAGJ;AAAd,QAA0B,EAArC,EAAyC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAI;AACF,aAAKD,WAAL,CAAiB;AACfH,UAAAA,UAAU,EAAEQ,OADG;AAEfP,UAAAA,MAAM,EAAE;AAFO,SAAjB;AAKA,cAAMQ,MAAM,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAU,8BAAV,CAArB;AAEA,aAAKP,WAAL,CAAiB;AACfN,UAAAA,MAAM,EAAEY,MAAM,CAACE,IADA;AAEfV,UAAAA,MAAM,EAAE,KAFO;AAGfD,UAAAA,UAAU,EAAE;AAHG,SAAjB;AAKAY,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBJ,MAAM,CAACE,IAA1B;AACD,OAdD,CAcE,OAAOG,GAAP,EAAY;AACZ,aAAKX,WAAL,CAAiB;AACfY,UAAAA,YAAY,EAAED,GAAG,CAACE,OADH;AAEff,UAAAA,MAAM,EAAE,KAFO;AAGfD,UAAAA,UAAU,EAAE;AAHG,SAAjB;AAKD;AACF,KAnCqB;;AAqCtBiB,IAAAA,SAAS,CAAC;AAAEpB,MAAAA,MAAM,GAAG;AAAX,KAAD,EAAkB;AACzBe,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,WAAKV,WAAL,CAAiB;AACfN,QAAAA;AADe,OAAjB;AAGAe,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiChB,MAAjC;AACD,KA3CqB;;AA6CtBqB,IAAAA,WAAW,CAAC;AAAEnB,MAAAA,QAAQ,GAAG;AAAb,KAAD,EAAoB;AAC7B,WAAKI,WAAL,CAAiB;AACfJ,QAAAA;AADe,OAAjB;AAGAa,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCd,QAAjC;AACD;;AAlDqB,GAAf;AAbW,CAAf","sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\r\nimport axios from \"axios\";\r\nexport const events = {\r\n  state: {\r\n    events: [],\r\n    selected: [],\r\n\r\n    refreshing: false,\r\n    isBusy: true,\r\n  },\r\n  reducers: {\r\n    updateState(state, payload) {\r\n      return { ...state, ...payload };\r\n    },\r\n  },\r\n  effects: (dispatch) => ({\r\n    async list({ refresh, ...payload } = {}) {\r\n      //   try {\r\n      //     // await verifyServices.sendEmailID( { email: email } );\r\n      //     axios.get(\"http://localhost:8000/events\").then((response) => {\r\n      //       console.log(response.data);\r\n      //       // setEventsList(response.data);\r\n      //       this.updateState({ payload });\r\n      //     });\r\n      //   } catch (error) {\r\n      //     console.log(\"nasend na may error\");\r\n      //     console.warn(error);\r\n      //     //   setStatus(\"Completed\");\r\n      //   }\r\n      try {\r\n        this.updateState({\r\n          refreshing: refresh,\r\n          isBusy: true,\r\n        });\r\n\r\n        const result = await axios.get(\"http://localhost:8000/events\");\r\n\r\n        this.updateState({\r\n          events: result.data,\r\n          isBusy: false,\r\n          refreshing: false,\r\n        });\r\n        console.log(\"res\", result.data);\r\n      } catch (err) {\r\n        this.updateState({\r\n          errorMessage: err.message,\r\n          isBusy: false,\r\n          refreshing: false,\r\n        });\r\n      }\r\n    },\r\n\r\n    setEvents({ events = [] }) {\r\n      console.log(\"check check\");\r\n      this.updateState({\r\n        events,\r\n      });\r\n      console.log(\"events na natapos\", events);\r\n    },\r\n\r\n    setSelected({ selected = [] }) {\r\n      this.updateState({\r\n        selected,\r\n      });\r\n      console.log(\"select na natapos\", selected);\r\n    },\r\n  }),\r\n};\r\n"]},"metadata":{},"sourceType":"module"}