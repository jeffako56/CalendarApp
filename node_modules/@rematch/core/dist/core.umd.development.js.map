{"version":3,"file":"core.umd.development.js","sources":["../src/reduxStore.ts","../src/validate.ts","../src/dispatcher.ts","../src/bag.ts","../src/rematchStore.ts","../src/config.ts","../src/index.ts"],"sourcesContent":["import * as Redux from 'redux'\nimport {\n\tAction,\n\tConfigRedux,\n\tModelReducers,\n\tNamedModel,\n\tRematchBag,\n\tDevtoolOptions,\n\tModels,\n\tRematchRootState,\n} from './types'\n\n/**\n * Creates 'combined' reducer for each model and then merges those reducers\n * together into a 'root' reducer. It then creates a Redux store with\n * middlewares and enhancers.\n */\nexport default function createReduxStore<\n\tTModels extends Models<TModels>,\n\tTExtraModels extends Models<TModels>,\n\tRootState = RematchRootState<TModels, TExtraModels>\n>(bag: RematchBag<TModels, TExtraModels>): Redux.Store<RootState> {\n\tbag.models.forEach((model) => createModelReducer(bag, model))\n\n\tconst rootReducer = createRootReducer<RootState, TModels, TExtraModels>(bag)\n\n\tconst middlewares = Redux.applyMiddleware(...bag.reduxConfig.middlewares)\n\tconst enhancers = composeEnhancersWithDevtools(\n\t\tbag.reduxConfig.devtoolOptions\n\t)(...bag.reduxConfig.enhancers, middlewares)\n\n\tconst createStore = bag.reduxConfig.createStore || Redux.createStore\n\tconst bagInitialState = bag.reduxConfig.initialState\n\tconst initialState = bagInitialState === undefined ? {} : bagInitialState\n\n\treturn createStore<RootState, Action, any, typeof initialState>(\n\t\trootReducer,\n\t\tinitialState,\n\t\tenhancers\n\t)\n}\n\n/**\n * Creates a combined reducer for a given model. What it means is that:\n * - it forms an action name for each model's reducer as 'modelName/reducerKey'\n * - it creates a mapping from action name to its reducer\n * - it wraps the mapping with a function (combined reducer) that selects and\n *   runs a reducer based on the incoming action\n * - if the model also has a base reducer defined, it creates a function which\n *   first runs the incoming action through this reducer and then passes the\n *   resulting state and the same action to combined reducer\n *\n * The final result - a function, is returned.\n */\nexport function createModelReducer<\n\tTModels extends Models<TModels>,\n\tTExtraModels extends Models<TModels>,\n\tTState extends NamedModel<TModels>['state'] = any\n>(bag: RematchBag<TModels, TExtraModels>, model: NamedModel<TModels>): void {\n\tconst modelReducers: ModelReducers<TState> = {}\n\n\t// build action name for each reducer and create mapping from name to reducer\n\tconst modelReducerKeys = Object.keys(model.reducers)\n\tmodelReducerKeys.forEach((reducerKey) => {\n\t\tconst actionName = isAlreadyActionName(reducerKey)\n\t\t\t? reducerKey\n\t\t\t: `${model.name}/${reducerKey}`\n\n\t\tmodelReducers[actionName] = model.reducers[reducerKey]\n\t})\n\n\t// select and run a reducer based on the incoming action\n\tconst combinedReducer = (\n\t\tstate: TState = model.state,\n\t\taction: Action\n\t): TState => {\n\t\tif (action.type in modelReducers) {\n\t\t\treturn modelReducers[action.type](state, action.payload, action.meta)\n\t\t}\n\n\t\treturn state\n\t}\n\n\tconst modelBaseReducer = model.baseReducer\n\n\t// when baseReducer is defined, run the action first through it\n\tlet reducer = !modelBaseReducer\n\t\t? combinedReducer\n\t\t: (state: TState = model.state, action: Action): TState =>\n\t\t\t\tcombinedReducer(modelBaseReducer(state, action), action)\n\n\tbag.forEachPlugin('onReducer', (onReducer) => {\n\t\treducer = onReducer(reducer, model.name, bag) || reducer\n\t})\n\n\tbag.reduxConfig.reducers[model.name] = reducer\n}\n\n/**\n * It merges all reducers in config using mergeReducers function. Additionally,\n * if user supplied any rootReducers, a wrapper function around merged reducers\n * is created. It first feeds each into its corresponding 'root' reducer (if\n * it's available), and then passes on the resulting state to the merged reducer.\n */\nexport function createRootReducer<\n\tTRootState,\n\tTModels extends Models<TModels>,\n\tTExtraModels extends Models<TModels>\n>(bag: RematchBag<TModels, TExtraModels>): Redux.Reducer<TRootState, Action> {\n\tconst { rootReducers } = bag.reduxConfig\n\tconst mergedReducers = mergeReducers<TRootState>(bag.reduxConfig)\n\tlet rootReducer = mergedReducers\n\n\tif (rootReducers && Object.keys(rootReducers).length) {\n\t\trootReducer = (\n\t\t\tstate: TRootState | undefined,\n\t\t\taction: Action\n\t\t): TRootState => {\n\t\t\tconst actionRootReducer = rootReducers[action.type]\n\n\t\t\tif (actionRootReducer) {\n\t\t\t\treturn mergedReducers(actionRootReducer(state, action), action)\n\t\t\t}\n\n\t\t\treturn mergedReducers(state, action)\n\t\t}\n\t}\n\n\tbag.forEachPlugin('onRootReducer', (onRootReducer) => {\n\t\trootReducer = onRootReducer(rootReducer, bag) || rootReducer\n\t})\n\n\treturn rootReducer\n}\n\n/**\n * Merges all reducers defined in config into one function using user supplied\n * or default combineReducers function.\n * If there are no reducers defined, it returns a function that just returns\n * the state for all incoming actions.\n */\nfunction mergeReducers<TRootState>(\n\treduxConfig: ConfigRedux<TRootState>\n): Redux.Reducer<TRootState, Action> {\n\tconst combineReducers = reduxConfig.combineReducers || Redux.combineReducers\n\n\tif (!Object.keys(reduxConfig.reducers).length) {\n\t\treturn (state: any): TRootState => state\n\t}\n\n\treturn combineReducers(reduxConfig.reducers as Redux.ReducersMapObject)\n}\n\n/**\n * Returns Redux Devtools compose method unless it's disabled, in which case it\n * returns default Redux.compose.\n */\nfunction composeEnhancersWithDevtools(\n\tdevtoolOptions: DevtoolOptions = {}\n): (...args: any[]) => Redux.StoreEnhancer {\n\treturn !devtoolOptions.disabled &&\n\t\ttypeof window === 'object' &&\n\t\twindow.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n\t\t? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__(devtoolOptions)\n\t\t: Redux.compose\n}\n\n/**\n * Determines if a reducer key is already an action name, for example -\n * a listener on another model.\n */\nfunction isAlreadyActionName(reducerKey: string): boolean {\n\treturn reducerKey.indexOf('/') > -1\n}\n","import {\n\tConfig,\n\tModelEffects,\n\tModelReducers,\n\tNamedModel,\n\tPlugin,\n\tModels,\n} from './types'\n\n/**\n * If the first item is true, it means there is an error described by\n * the second item.\n */\nexport type Validation = [boolean | undefined, string]\n\n/**\n * Checks if a parameter is a valid object.\n */\nexport const isObject = <T>(obj: T): boolean =>\n\ttypeof obj === 'object' && obj !== null && !Array.isArray(obj)\n\n/**\n * Checks if a parameter is a valid function but only when it's defined.\n * Otherwise, always returns true.\n */\nexport const ifDefinedIsFunction = <T>(func: T): boolean =>\n\t!func || typeof func === 'function'\n\n/**\n * Takes an array of arrays of validations. Collects all errors and throws.\n * Should be used by plugins to keep the validation behaviour the same for all\n * Rematch-related libraries.\n */\nconst validate = (runValidations: () => Validation[]): void => {\n\tif (process.env.NODE_ENV !== 'production') {\n\t\tconst validations = runValidations()\n\t\tconst errors: string[] = []\n\n\t\tvalidations.forEach((validation) => {\n\t\t\tconst isInvalid = validation[0]\n\t\t\tconst errorMessage = validation[1]\n\t\t\tif (isInvalid) {\n\t\t\t\terrors.push(errorMessage)\n\t\t\t}\n\t\t})\n\n\t\tif (errors.length > 0) {\n\t\t\tthrow new Error(errors.join(', '))\n\t\t}\n\t}\n}\n\nexport const validateConfig = <\n\tTModels extends Models<TModels>,\n\tTExtraModels extends Models<TModels>\n>(\n\tconfig: Config<TModels, TExtraModels>\n): void => {\n\tvalidate(() => [\n\t\t[!Array.isArray(config.plugins), 'init config.plugins must be an array'],\n\t\t[!isObject(config.models), 'init config.models must be an object'],\n\t\t[\n\t\t\t!isObject(config.redux.reducers),\n\t\t\t'init config.redux.reducers must be an object',\n\t\t],\n\t\t[\n\t\t\t!Array.isArray(config.redux.middlewares),\n\t\t\t'init config.redux.middlewares must be an array',\n\t\t],\n\t\t[\n\t\t\t!Array.isArray(config.redux.enhancers),\n\t\t\t'init config.redux.enhancers must be an array of functions',\n\t\t],\n\t\t[\n\t\t\t!ifDefinedIsFunction(config.redux.combineReducers),\n\t\t\t'init config.redux.combineReducers must be a function',\n\t\t],\n\t\t[\n\t\t\t!ifDefinedIsFunction(config.redux.createStore),\n\t\t\t'init config.redux.createStore must be a function',\n\t\t],\n\t])\n}\n\nexport const validateModel = <TModels extends Models<TModels>>(\n\tmodel: NamedModel<TModels>\n): void => {\n\tvalidate(() => [\n\t\t[!model, 'model config is required'],\n\t\t[typeof model.name !== 'string', 'model \"name\" [string] is required'],\n\t\t[\n\t\t\tmodel.state === undefined && model.baseReducer === undefined,\n\t\t\t'model \"state\" is required',\n\t\t],\n\t\t[\n\t\t\t!ifDefinedIsFunction(model.baseReducer),\n\t\t\t'model \"baseReducer\" must be a function',\n\t\t],\n\t])\n}\n\nexport const validatePlugin = <\n\tTModels extends Models<TModels>,\n\tTExtraModels extends Models<TModels>\n>(\n\tplugin: Plugin<TModels, TExtraModels>\n): void => {\n\tvalidate(() => [\n\t\t[\n\t\t\t!ifDefinedIsFunction(plugin.onStoreCreated),\n\t\t\t'Plugin onStoreCreated must be a function',\n\t\t],\n\t\t[!ifDefinedIsFunction(plugin.onModel), 'Plugin onModel must be a function'],\n\t\t[\n\t\t\t!ifDefinedIsFunction(plugin.onReducer),\n\t\t\t'Plugin onReducer must be a function',\n\t\t],\n\t\t[\n\t\t\t!ifDefinedIsFunction(plugin.onRootReducer),\n\t\t\t'Plugin onRootReducer must be a function',\n\t\t],\n\t\t[\n\t\t\t!ifDefinedIsFunction(plugin.createMiddleware),\n\t\t\t'Plugin createMiddleware must be a function',\n\t\t],\n\t])\n}\n\nexport const validateModelReducer = (\n\tmodelName: string,\n\treducers: ModelReducers,\n\treducerName: string\n): void => {\n\tvalidate(() => [\n\t\t[\n\t\t\t!!reducerName.match(/\\/.+\\//),\n\t\t\t`Invalid reducer name (${modelName}/${reducerName})`,\n\t\t],\n\t\t[\n\t\t\ttypeof reducers[reducerName] !== 'function',\n\t\t\t`Invalid reducer (${modelName}/${reducerName}). Must be a function`,\n\t\t],\n\t])\n}\n\nexport const validateModelEffect = <TModels extends Models<TModels>>(\n\tmodelName: string,\n\teffects: ModelEffects<TModels>,\n\teffectName: string\n): void => {\n\tvalidate(() => [\n\t\t[\n\t\t\t!!effectName.match(/\\//),\n\t\t\t`Invalid effect name (${modelName}/${effectName})`,\n\t\t],\n\t\t[\n\t\t\ttypeof effects[effectName] !== 'function',\n\t\t\t`Invalid effect (${modelName}/${effectName}). Must be a function`,\n\t\t],\n\t])\n}\n\nexport default validate\n","import {\n\tAction,\n\tModelEffects,\n\tModelEffectsCreator,\n\tModels,\n\tNamedModel,\n\tRematchBag,\n\tRematchDispatcher,\n\tEffectRematchDispatcher,\n\tRematchStore,\n} from './types'\nimport { validateModelEffect, validateModelReducer } from './validate'\n\n/**\n * Builds a dispatcher for given model name and action name. The dispatched\n * action will have a type `modelName/actionName`.\n * Additionally, adds the isEffect property to the created dispatcher.\n * isEffect helps to differentiate effects dispatchers from reducer dispatchers.\n */\nconst createActionDispatcher = <\n\tTModels extends Models<TModels>,\n\tTExtraModels extends Models<TModels>\n>(\n\trematch: RematchStore<TModels, TExtraModels>,\n\tmodelName: string,\n\tactionName: string,\n\tisEffect: boolean\n): RematchDispatcher | EffectRematchDispatcher => {\n\treturn Object.assign(\n\t\t(payload?: any, meta?: any): Action => {\n\t\t\tconst action: Action = { type: `${modelName}/${actionName}` }\n\n\t\t\tif (typeof payload !== 'undefined') {\n\t\t\t\taction.payload = payload\n\t\t\t}\n\n\t\t\tif (typeof meta !== 'undefined') {\n\t\t\t\taction.meta = meta\n\t\t\t}\n\n\t\t\treturn rematch.dispatch(action)\n\t\t},\n\t\t{\n\t\t\tisEffect,\n\t\t}\n\t)\n}\n\n/**\n * Creates a dispatcher object for a model - it contains a mapping from all\n * reducers and effects *names* to functions which dispatch their corresponding\n * actions.\n */\nconst createDispatcher = <\n\tTModels extends Models<TModels>,\n\tTExtraModels extends Models<TModels>,\n\tTModel extends NamedModel<TModels>\n>(\n\trematch: RematchStore<TModels, TExtraModels>,\n\tbag: RematchBag<TModels, TExtraModels>,\n\tmodel: TModel\n): void => {\n\tconst modelDispatcher = rematch.dispatch[model.name]\n\n\t// map reducer names to dispatch actions\n\tconst modelReducersKeys = Object.keys(model.reducers)\n\tmodelReducersKeys.forEach((reducerName) => {\n\t\tvalidateModelReducer(model.name, model.reducers, reducerName)\n\n\t\tmodelDispatcher[reducerName] = createActionDispatcher(\n\t\t\trematch,\n\t\t\tmodel.name,\n\t\t\treducerName,\n\t\t\tfalse\n\t\t)\n\t})\n\n\tlet effects: ModelEffects<TModels> = {}\n\n\t// 'effects' might be actually a function creating effects\n\tif (model.effects) {\n\t\teffects =\n\t\t\ttypeof model.effects === 'function'\n\t\t\t\t? (model.effects as ModelEffectsCreator<TModels>)(rematch.dispatch)\n\t\t\t\t: model.effects\n\t}\n\n\t// map effects names to dispatch actions\n\tconst effectKeys = Object.keys(effects)\n\teffectKeys.forEach((effectName) => {\n\t\tvalidateModelEffect(model.name, effects, effectName)\n\n\t\tbag.effects[`${model.name}/${effectName}`] = effects[effectName].bind(\n\t\t\tmodelDispatcher\n\t\t)\n\n\t\tmodelDispatcher[effectName] = createActionDispatcher(\n\t\t\trematch,\n\t\t\tmodel.name,\n\t\t\teffectName,\n\t\t\ttrue\n\t\t)\n\t})\n}\n\nexport default createDispatcher\n","import { Config, Model, Models, NamedModel, RematchBag } from './types'\nimport { validateModel } from './validate'\n\n/**\n * Creates and returns a 'Rematch Bag', which is a set of configuration options\n * used by the Rematch library in various functions.\n */\nexport default function createRematchBag<\n\tTModels extends Models<TModels>,\n\tTExtraModels extends Models<TModels>\n>(config: Config<TModels, TExtraModels>): RematchBag<TModels, TExtraModels> {\n\treturn {\n\t\tmodels: createNamedModels(config.models),\n\t\treduxConfig: config.redux,\n\t\tforEachPlugin(method, fn): void {\n\t\t\tconfig.plugins.forEach((plugin) => {\n\t\t\t\tif (plugin[method]) {\n\t\t\t\t\tfn(plugin[method]!)\n\t\t\t\t}\n\t\t\t})\n\t\t},\n\t\teffects: {},\n\t}\n}\n\n/**\n * Transforms mapping from a model name to a model object, into an array of\n * 'named' models - models with embedded name and default value for reducers\n * if user didn't provide any.\n */\nfunction createNamedModels<TModels extends Models<TModels>>(\n\tmodels: TModels | Partial<TModels>\n): NamedModel<TModels>[] {\n\treturn Object.keys(models).map((modelName: string) => {\n\t\tconst model = createNamedModel(modelName, (models as TModels)[modelName])\n\t\tvalidateModel(model)\n\t\treturn model\n\t})\n}\n\n/**\n * Transforms a model into 'named' model - model which contains 'name' and\n * 'reducers' properties if user didn't provide any.\n */\nfunction createNamedModel<TModels extends Models<TModels>>(\n\tname: string,\n\tmodel: Model<TModels>\n): NamedModel<TModels> {\n\treturn {\n\t\tname,\n\t\treducers: {},\n\t\t...model,\n\t}\n}\n","import { Middleware } from 'redux'\nimport {\n\tAction,\n\tConfig,\n\tExposedFunction,\n\tModels,\n\tNamedModel,\n\tObjectNotAFunction,\n\tPlugin,\n\tRematchBag,\n\tRematchStore,\n\tModelDispatcher,\n\tRematchDispatch,\n} from './types'\nimport createReduxStore, {\n\tcreateModelReducer,\n\tcreateRootReducer,\n} from './reduxStore'\nimport createDispatcher from './dispatcher'\nimport { validateModel } from './validate'\nimport createRematchBag from './bag'\n\nexport default function createRematchStore<\n\tTModels extends Models<TModels>,\n\tTExtraModels extends Models<TModels>\n>(config: Config<TModels, TExtraModels>): RematchStore<TModels, TExtraModels> {\n\t// setup rematch 'bag' for storing useful values and functions\n\tconst bag = createRematchBag(config)\n\n\t// add middleware for handling effects\n\tbag.reduxConfig.middlewares.push(createEffectsMiddleware(bag))\n\n\t// collect middlewares from plugins\n\tbag.forEachPlugin('createMiddleware', (createMiddleware) => {\n\t\tbag.reduxConfig.middlewares.push(createMiddleware(bag))\n\t})\n\n\tconst reduxStore = createReduxStore(bag)\n\n\tlet rematchStore = {\n\t\t...reduxStore,\n\t\tname: config.name,\n\t\taddModel(model: NamedModel<TModels>) {\n\t\t\tvalidateModel(model)\n\t\t\tcreateModelReducer(bag, model)\n\t\t\tprepareModel(rematchStore, bag, model)\n\t\t\treduxStore.replaceReducer(createRootReducer(bag))\n\t\t\treduxStore.dispatch({ type: '@@redux/REPLACE' })\n\t\t},\n\t} as RematchStore<TModels, TExtraModels>\n\n\taddExposed(rematchStore, config.plugins)\n\n\t// generate dispatch[modelName][actionName] for all reducers and effects\n\tbag.models.forEach((model) => prepareModel(rematchStore, bag, model))\n\n\tbag.forEachPlugin('onStoreCreated', (onStoreCreated) => {\n\t\trematchStore = onStoreCreated(rematchStore, bag) || rematchStore\n\t})\n\n\treturn rematchStore\n}\n\nfunction createEffectsMiddleware<\n\tTModels extends Models<TModels>,\n\tTExtraModels extends Models<TModels>\n>(bag: RematchBag<TModels, TExtraModels>): Middleware {\n\treturn (store) => (next) => (action: Action): any => {\n\t\tif (action.type in bag.effects) {\n\t\t\t// first run reducer action if exists\n\t\t\tnext(action)\n\n\t\t\t// then run the effect and return its result\n\t\t\treturn (bag.effects as any)[action.type](\n\t\t\t\taction.payload,\n\t\t\t\tstore.getState(),\n\t\t\t\taction.meta\n\t\t\t)\n\t\t}\n\n\t\treturn next(action)\n\t}\n}\n\nfunction prepareModel<\n\tTModels extends Models<TModels>,\n\tTExtraModels extends Models<TModels>,\n\tTModel extends NamedModel<TModels>\n>(\n\trematchStore: RematchStore<TModels, TExtraModels>,\n\tbag: RematchBag<TModels, TExtraModels>,\n\tmodel: TModel\n): void {\n\tconst modelDispatcher = {} as ModelDispatcher<TModel, TModels>\n\n\t// inject model so effects creator can access it\n\trematchStore.dispatch[\n\t\t`${model.name}` as keyof RematchDispatch<TModels>\n\t] = modelDispatcher\n\n\tcreateDispatcher(rematchStore, bag, model)\n\n\tbag.forEachPlugin('onModel', (onModel) => {\n\t\tonModel(model, rematchStore)\n\t})\n}\n\n/**\n * Adds properties exposed by plugins into the Rematch instance. If a exposed\n * property is a function, it passes rematch as the first argument.\n *\n * If you're implementing a plugin in TypeScript, extend Rematch namespace by\n * adding the properties that you exposed from your plugin.\n */\nfunction addExposed<\n\tTModels extends Models<TModels>,\n\tTExtraModels extends Models<TModels>\n>(\n\tstore: RematchStore<TModels, TExtraModels>,\n\tplugins: Plugin<TModels, TExtraModels>[]\n): void {\n\tplugins.forEach((plugin) => {\n\t\tif (!plugin.exposed) return\n\t\tconst pluginKeys = Object.keys(plugin.exposed)\n\t\tpluginKeys.forEach((key) => {\n\t\t\tif (!plugin.exposed) return\n\t\t\tconst exposedItem = plugin.exposed[key] as\n\t\t\t\t| ExposedFunction<TModels, TExtraModels>\n\t\t\t\t| ObjectNotAFunction\n\t\t\tconst isExposedFunction = typeof exposedItem === 'function'\n\n\t\t\tstore[key] = isExposedFunction\n\t\t\t\t? (...params: any[]): any =>\n\t\t\t\t\t\t(exposedItem as ExposedFunction<TModels, TExtraModels>)(\n\t\t\t\t\t\t\tstore,\n\t\t\t\t\t\t\t...params\n\t\t\t\t\t\t)\n\t\t\t\t: Object.create(plugin.exposed[key])\n\t\t})\n\t})\n}\n","import { InitConfig, Config, Models } from './types'\nimport { validateConfig, validatePlugin } from './validate'\n\nlet count = 0\n\n/**\n * Builds complete Rematch config using default values for properties not\n * supplied by the user. Additionally, applies changes to the config made by\n * the plugins selected by the user.\n */\nexport default function createConfig<\n\tTModels extends Models<TModels>,\n\tTExtraModels extends Models<TModels>\n>(\n\tinitConfig: InitConfig<TModels, TExtraModels>\n): Config<TModels, TExtraModels> {\n\tconst storeName = initConfig.name ?? `Rematch Store ${count}`\n\n\tcount += 1\n\n\tconst config = {\n\t\tname: storeName,\n\t\tmodels: initConfig.models || {},\n\t\tplugins: initConfig.plugins || [],\n\t\tredux: {\n\t\t\treducers: {},\n\t\t\trootReducers: {},\n\t\t\tenhancers: [],\n\t\t\tmiddlewares: [],\n\t\t\t...initConfig.redux,\n\t\t\tdevtoolOptions: {\n\t\t\t\tname: storeName,\n\t\t\t\t...(initConfig.redux?.devtoolOptions ?? {}),\n\t\t\t},\n\t\t},\n\t} as Config<TModels, TExtraModels>\n\n\tvalidateConfig(config)\n\n\t// Apply changes to the config required by plugins\n\tconfig.plugins.forEach((plugin) => {\n\t\tif (plugin.config) {\n\t\t\t// Collect new models\n\t\t\tconfig.models = merge(config.models, plugin.config.models)\n\n\t\t\t// Collect redux configuration changes\n\t\t\tif (plugin.config.redux) {\n\t\t\t\tconfig.redux.initialState = merge(\n\t\t\t\t\tconfig.redux.initialState,\n\t\t\t\t\tplugin.config.redux.initialState\n\t\t\t\t)\n\n\t\t\t\tconfig.redux.reducers = merge(\n\t\t\t\t\tconfig.redux.reducers,\n\t\t\t\t\tplugin.config.redux.reducers\n\t\t\t\t)\n\n\t\t\t\tconfig.redux.rootReducers = merge(\n\t\t\t\t\tconfig.redux.rootReducers,\n\t\t\t\t\tplugin.config.redux.reducers\n\t\t\t\t)\n\n\t\t\t\tconfig.redux.enhancers = [\n\t\t\t\t\t...config.redux.enhancers,\n\t\t\t\t\t...(plugin.config.redux.enhancers || []),\n\t\t\t\t]\n\n\t\t\t\tconfig.redux.middlewares = [\n\t\t\t\t\t...config.redux.middlewares,\n\t\t\t\t\t...(plugin.config.redux.middlewares || []),\n\t\t\t\t]\n\n\t\t\t\tconfig.redux.combineReducers =\n\t\t\t\t\tconfig.redux.combineReducers || plugin.config.redux.combineReducers\n\n\t\t\t\tconfig.redux.createStore =\n\t\t\t\t\tconfig.redux.createStore || plugin.config.redux.createStore\n\t\t\t}\n\t\t}\n\n\t\tvalidatePlugin(plugin)\n\t})\n\n\treturn config as Config<TModels, TExtraModels>\n}\n\n/**\n * Shallow merges original object with the extra object, giving the precedence\n * to the original object.\n */\nfunction merge<\n\tT extends Record<string, unknown>,\n\tU extends Record<string, unknown> = T\n>(original: T, extra?: U): T | (T & U) {\n\treturn extra ? { ...extra, ...original } : original\n}\n","import createRematchStore from './rematchStore'\nimport { InitConfig, Models, RematchStore, ModelCreator } from './types'\nimport createConfig from './config'\n\n/**\n * Prepares a complete configuration and creates a Rematch store.\n */\nexport const init = <\n\tTModels extends Models<TModels>,\n\tTExtraModels extends Models<TModels> = Record<string, never>\n>(\n\tinitConfig?: InitConfig<TModels, TExtraModels>\n): RematchStore<TModels, TExtraModels> => {\n\tconst config = createConfig(initConfig || {})\n\treturn createRematchStore(config)\n}\n\nexport const createModel: ModelCreator = () => (mo): any => {\n\tconst { reducers = {}, effects = {} } = mo\n\n\treturn {\n\t\t...mo,\n\t\treducers,\n\t\teffects,\n\t}\n}\n\nexport default {\n\tinit,\n\tcreateModel,\n}\n\nexport * from './types'\n"],"names":["createReduxStore","bag","models","forEach","model","createModelReducer","rootReducer","createRootReducer","middlewares","Redux","reduxConfig","enhancers","composeEnhancersWithDevtools","devtoolOptions","createStore","bagInitialState","initialState","undefined","modelReducers","modelReducerKeys","Object","keys","reducers","reducerKey","actionName","isAlreadyActionName","name","combinedReducer","state","action","type","payload","meta","modelBaseReducer","baseReducer","reducer","forEachPlugin","onReducer","rootReducers","mergedReducers","mergeReducers","length","actionRootReducer","onRootReducer","combineReducers","disabled","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","indexOf","isObject","obj","Array","isArray","ifDefinedIsFunction","func","validate","runValidations","validations","errors","validation","isInvalid","errorMessage","push","Error","join","validateConfig","config","plugins","redux","validateModel","validatePlugin","plugin","onStoreCreated","onModel","createMiddleware","validateModelReducer","modelName","reducerName","match","validateModelEffect","effects","effectName","createActionDispatcher","rematch","isEffect","assign","dispatch","createDispatcher","modelDispatcher","modelReducersKeys","effectKeys","bind","createRematchBag","createNamedModels","method","fn","map","createNamedModel","createRematchStore","createEffectsMiddleware","reduxStore","rematchStore","addModel","prepareModel","replaceReducer","addExposed","store","next","getState","exposed","pluginKeys","key","exposedItem","isExposedFunction","params","create","count","createConfig","initConfig","storeName","merge","original","extra","init","createModel","mo"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;WAiBwBA,iBAItBC;EACDA,EAAAA,GAAG,CAACC,MAAJ,CAAWC,OAAX,CAAmB,UAACC,KAAD;EAAA,WAAWC,kBAAkB,CAACJ,GAAD,EAAMG,KAAN,CAA7B;EAAA,GAAnB;EAEA,MAAME,WAAW,GAAGC,iBAAiB,CAAmCN,GAAnC,CAArC;EAEA,MAAMO,WAAW,GAAGC,qBAAA,OAAAA,KAAK,EAAoBR,GAAG,CAACS,WAAJ,CAAgBF,WAApC,CAAzB;EACA,MAAMG,SAAS,GAAGC,4BAA4B,CAC7CX,GAAG,CAACS,WAAJ,CAAgBG,cAD6B,CAA5B,eAEbZ,GAAG,CAACS,WAAJ,CAAgBC,SAFH,SAEcH,WAFd,GAAlB;EAIA,MAAMM,WAAW,GAAGb,GAAG,CAACS,WAAJ,CAAgBI,WAAhB,IAA+BL,iBAAnD;EACA,MAAMM,eAAe,GAAGd,GAAG,CAACS,WAAJ,CAAgBM,YAAxC;EACA,MAAMA,YAAY,GAAGD,eAAe,KAAKE,SAApB,GAAgC,EAAhC,GAAqCF,eAA1D;EAEA,SAAOD,WAAW,CACjBR,WADiB,EAEjBU,YAFiB,EAGjBL,SAHiB,CAAlB;EAKA;WAceN,mBAIdJ,KAAwCG;EACzC,MAAMc,aAAa,GAA0B,EAA7C;EAGA,MAAMC,gBAAgB,GAAGC,MAAM,CAACC,IAAP,CAAYjB,KAAK,CAACkB,QAAlB,CAAzB;EACAH,EAAAA,gBAAgB,CAAChB,OAAjB,CAAyB,UAACoB,UAAD;EACxB,QAAMC,UAAU,GAAGC,mBAAmB,CAACF,UAAD,CAAnB,GAChBA,UADgB,GAEbnB,KAAK,CAACsB,IAFO,SAECH,UAFpB;EAIAL,IAAAA,aAAa,CAACM,UAAD,CAAb,GAA4BpB,KAAK,CAACkB,QAAN,CAAeC,UAAf,CAA5B;EACA,GAND;;EASA,MAAMI,eAAe,GAAG,SAAlBA,eAAkB,CACvBC,KADuB,EAEvBC,MAFuB;UACvBD;EAAAA,MAAAA,QAAgBxB,KAAK,CAACwB;;;EAGtB,QAAIC,MAAM,CAACC,IAAP,IAAeZ,aAAnB,EAAkC;EACjC,aAAOA,aAAa,CAACW,MAAM,CAACC,IAAR,CAAb,CAA2BF,KAA3B,EAAkCC,MAAM,CAACE,OAAzC,EAAkDF,MAAM,CAACG,IAAzD,CAAP;EACA;;EAED,WAAOJ,KAAP;EACA,GATD;;EAWA,MAAMK,gBAAgB,GAAG7B,KAAK,CAAC8B,WAA/B;EAGA,MAAIC,OAAO,GAAG,CAACF,gBAAD,GACXN,eADW,GAEX,UAACC,KAAD,EAA8BC,MAA9B;EAAA,QAACD,KAAD;EAACA,MAAAA,KAAD,GAAiBxB,KAAK,CAACwB,KAAvB;EAAA;;EAAA,WACAD,eAAe,CAACM,gBAAgB,CAACL,KAAD,EAAQC,MAAR,CAAjB,EAAkCA,MAAlC,CADf;EAAA,GAFH;EAKA5B,EAAAA,GAAG,CAACmC,aAAJ,CAAkB,WAAlB,EAA+B,UAACC,SAAD;EAC9BF,IAAAA,OAAO,GAAGE,SAAS,CAACF,OAAD,EAAU/B,KAAK,CAACsB,IAAhB,EAAsBzB,GAAtB,CAAT,IAAuCkC,OAAjD;EACA,GAFD;EAIAlC,EAAAA,GAAG,CAACS,WAAJ,CAAgBY,QAAhB,CAAyBlB,KAAK,CAACsB,IAA/B,IAAuCS,OAAvC;EACA;WAQe5B,kBAIdN;EACD,MAAQqC,YAAR,GAAyBrC,GAAG,CAACS,WAA7B,CAAQ4B,YAAR;EACA,MAAMC,cAAc,GAAGC,aAAa,CAAavC,GAAG,CAACS,WAAjB,CAApC;EACA,MAAIJ,WAAW,GAAGiC,cAAlB;;EAEA,MAAID,YAAY,IAAIlB,MAAM,CAACC,IAAP,CAAYiB,YAAZ,EAA0BG,MAA9C,EAAsD;EACrDnC,IAAAA,WAAW,GAAG,qBACbsB,KADa,EAEbC,MAFa;EAIb,UAAMa,iBAAiB,GAAGJ,YAAY,CAACT,MAAM,CAACC,IAAR,CAAtC;;EAEA,UAAIY,iBAAJ,EAAuB;EACtB,eAAOH,cAAc,CAACG,iBAAiB,CAACd,KAAD,EAAQC,MAAR,CAAlB,EAAmCA,MAAnC,CAArB;EACA;;EAED,aAAOU,cAAc,CAACX,KAAD,EAAQC,MAAR,CAArB;EACA,KAXD;EAYA;;EAED5B,EAAAA,GAAG,CAACmC,aAAJ,CAAkB,eAAlB,EAAmC,UAACO,aAAD;EAClCrC,IAAAA,WAAW,GAAGqC,aAAa,CAACrC,WAAD,EAAcL,GAAd,CAAb,IAAmCK,WAAjD;EACA,GAFD;EAIA,SAAOA,WAAP;EACA;;EAQD,SAASkC,aAAT,CACC9B,WADD;EAGC,MAAMkC,eAAe,GAAGlC,WAAW,CAACkC,eAAZ,IAA+BnC,qBAAvD;;EAEA,MAAI,CAACW,MAAM,CAACC,IAAP,CAAYX,WAAW,CAACY,QAAxB,EAAkCmB,MAAvC,EAA+C;EAC9C,WAAO,UAACb,KAAD;EAAA,aAA4BA,KAA5B;EAAA,KAAP;EACA;;EAED,SAAOgB,eAAe,CAAClC,WAAW,CAACY,QAAb,CAAtB;EACA;;EAMD,SAASV,4BAAT,CACCC,cADD;QACCA;EAAAA,IAAAA,iBAAiC;;;EAEjC,SAAO,CAACA,cAAc,CAACgC,QAAhB,IACN,OAAOC,MAAP,KAAkB,QADZ,IAENA,MAAM,CAACC,oCAFD,GAGJD,MAAM,CAACC,oCAAP,CAA4ClC,cAA5C,CAHI,GAIJJ,aAJH;EAKA;;EAMD,SAASgB,mBAAT,CAA6BF,UAA7B;EACC,SAAOA,UAAU,CAACyB,OAAX,CAAmB,GAAnB,IAA0B,CAAC,CAAlC;EACA;;EC3JM,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAIC,GAAJ;EAAA,SACvB,OAAOA,GAAP,KAAe,QAAf,IAA2BA,GAAG,KAAK,IAAnC,IAA2C,CAACC,KAAK,CAACC,OAAN,CAAcF,GAAd,CADrB;EAAA,CAAjB;AAOP,EAAO,IAAMG,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAIC,IAAJ;EAAA,SAClC,CAACA,IAAD,IAAS,OAAOA,IAAP,KAAgB,UADS;EAAA,CAA5B;;EAQP,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,cAAD;EAChB,EAA2C;EAC1C,QAAMC,WAAW,GAAGD,cAAc,EAAlC;EACA,QAAME,MAAM,GAAa,EAAzB;EAEAD,IAAAA,WAAW,CAACtD,OAAZ,CAAoB,UAACwD,UAAD;EACnB,UAAMC,SAAS,GAAGD,UAAU,CAAC,CAAD,CAA5B;EACA,UAAME,YAAY,GAAGF,UAAU,CAAC,CAAD,CAA/B;;EACA,UAAIC,SAAJ,EAAe;EACdF,QAAAA,MAAM,CAACI,IAAP,CAAYD,YAAZ;EACA;EACD,KAND;;EAQA,QAAIH,MAAM,CAACjB,MAAP,GAAgB,CAApB,EAAuB;EACtB,YAAM,IAAIsB,KAAJ,CAAUL,MAAM,CAACM,IAAP,CAAY,IAAZ,CAAV,CAAN;EACA;EACD;EACD,CAjBD;;AAmBA,EAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAI7BC,MAJ6B;EAM7BX,EAAAA,QAAQ,CAAC;EAAA,WAAM,CACd,CAAC,CAACJ,KAAK,CAACC,OAAN,CAAcc,MAAM,CAACC,OAArB,CAAF,EAAiC,sCAAjC,CADc,EAEd,CAAC,CAAClB,QAAQ,CAACiB,MAAM,CAAChE,MAAR,CAAV,EAA2B,sCAA3B,CAFc,EAGd,CACC,CAAC+C,QAAQ,CAACiB,MAAM,CAACE,KAAP,CAAa9C,QAAd,CADV,EAEC,8CAFD,CAHc,EAOd,CACC,CAAC6B,KAAK,CAACC,OAAN,CAAcc,MAAM,CAACE,KAAP,CAAa5D,WAA3B,CADF,EAEC,gDAFD,CAPc,EAWd,CACC,CAAC2C,KAAK,CAACC,OAAN,CAAcc,MAAM,CAACE,KAAP,CAAazD,SAA3B,CADF,EAEC,2DAFD,CAXc,EAed,CACC,CAAC0C,mBAAmB,CAACa,MAAM,CAACE,KAAP,CAAaxB,eAAd,CADrB,EAEC,sDAFD,CAfc,EAmBd,CACC,CAACS,mBAAmB,CAACa,MAAM,CAACE,KAAP,CAAatD,WAAd,CADrB,EAEC,kDAFD,CAnBc,CAAN;EAAA,GAAD,CAAR;EAwBA,CA9BM;AAgCP,EAAO,IAAMuD,aAAa,GAAG,SAAhBA,aAAgB,CAC5BjE,KAD4B;EAG5BmD,EAAAA,QAAQ,CAAC;EAAA,WAAM,CACd,CAAC,CAACnD,KAAF,EAAS,0BAAT,CADc,EAEd,CAAC,OAAOA,KAAK,CAACsB,IAAb,KAAsB,QAAvB,EAAiC,mCAAjC,CAFc,EAGd,CACCtB,KAAK,CAACwB,KAAN,KAAgBX,SAAhB,IAA6Bb,KAAK,CAAC8B,WAAN,KAAsBjB,SADpD,EAEC,2BAFD,CAHc,EAOd,CACC,CAACoC,mBAAmB,CAACjD,KAAK,CAAC8B,WAAP,CADrB,EAEC,wCAFD,CAPc,CAAN;EAAA,GAAD,CAAR;EAYA,CAfM;AAiBP,EAAO,IAAMoC,cAAc,GAAG,SAAjBA,cAAiB,CAI7BC,MAJ6B;EAM7BhB,EAAAA,QAAQ,CAAC;EAAA,WAAM,CACd,CACC,CAACF,mBAAmB,CAACkB,MAAM,CAACC,cAAR,CADrB,EAEC,0CAFD,CADc,EAKd,CAAC,CAACnB,mBAAmB,CAACkB,MAAM,CAACE,OAAR,CAArB,EAAuC,mCAAvC,CALc,EAMd,CACC,CAACpB,mBAAmB,CAACkB,MAAM,CAAClC,SAAR,CADrB,EAEC,qCAFD,CANc,EAUd,CACC,CAACgB,mBAAmB,CAACkB,MAAM,CAAC5B,aAAR,CADrB,EAEC,yCAFD,CAVc,EAcd,CACC,CAACU,mBAAmB,CAACkB,MAAM,CAACG,gBAAR,CADrB,EAEC,4CAFD,CAdc,CAAN;EAAA,GAAD,CAAR;EAmBA,CAzBM;AA2BP,EAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CACnCC,SADmC,EAEnCtD,QAFmC,EAGnCuD,WAHmC;EAKnCtB,EAAAA,QAAQ,CAAC;EAAA,WAAM,CACd,CACC,CAAC,CAACsB,WAAW,CAACC,KAAZ,CAAkB,QAAlB,CADH,6BAE0BF,SAF1B,SAEuCC,WAFvC,OADc,EAKd,CACC,OAAOvD,QAAQ,CAACuD,WAAD,CAAf,KAAiC,UADlC,wBAEqBD,SAFrB,SAEkCC,WAFlC,2BALc,CAAN;EAAA,GAAD,CAAR;EAUA,CAfM;AAiBP,EAAO,IAAME,mBAAmB,GAAG,SAAtBA,mBAAsB,CAClCH,SADkC,EAElCI,OAFkC,EAGlCC,UAHkC;EAKlC1B,EAAAA,QAAQ,CAAC;EAAA,WAAM,CACd,CACC,CAAC,CAAC0B,UAAU,CAACH,KAAX,CAAiB,IAAjB,CADH,4BAEyBF,SAFzB,SAEsCK,UAFtC,OADc,EAKd,CACC,OAAOD,OAAO,CAACC,UAAD,CAAd,KAA+B,UADhC,uBAEoBL,SAFpB,SAEiCK,UAFjC,2BALc,CAAN;EAAA,GAAD,CAAR;EAUA,CAfM;;EC9HP,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAI9BC,OAJ8B,EAK9BP,SAL8B,EAM9BpD,UAN8B,EAO9B4D,QAP8B;EAS9B,SAAOhE,MAAM,CAACiE,MAAP,CACN,UAACtD,OAAD,EAAgBC,IAAhB;EACC,QAAMH,MAAM,GAAW;EAAEC,MAAAA,IAAI,EAAK8C,SAAL,SAAkBpD;EAAxB,KAAvB;;EAEA,QAAI,OAAOO,OAAP,KAAmB,WAAvB,EAAoC;EACnCF,MAAAA,MAAM,CAACE,OAAP,GAAiBA,OAAjB;EACA;;EAED,QAAI,OAAOC,IAAP,KAAgB,WAApB,EAAiC;EAChCH,MAAAA,MAAM,CAACG,IAAP,GAAcA,IAAd;EACA;;EAED,WAAOmD,OAAO,CAACG,QAAR,CAAiBzD,MAAjB,CAAP;EACA,GAbK,EAcN;EACCuD,IAAAA,QAAQ,EAARA;EADD,GAdM,CAAP;EAkBA,CA3BD;;EAkCA,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,CAKxBJ,OALwB,EAMxBlF,GANwB,EAOxBG,KAPwB;EASxB,MAAMoF,eAAe,GAAGL,OAAO,CAACG,QAAR,CAAiBlF,KAAK,CAACsB,IAAvB,CAAxB;EAGA,MAAM+D,iBAAiB,GAAGrE,MAAM,CAACC,IAAP,CAAYjB,KAAK,CAACkB,QAAlB,CAA1B;EACAmE,EAAAA,iBAAiB,CAACtF,OAAlB,CAA0B,UAAC0E,WAAD;EACzBF,IAAAA,oBAAoB,CAACvE,KAAK,CAACsB,IAAP,EAAatB,KAAK,CAACkB,QAAnB,EAA6BuD,WAA7B,CAApB;EAEAW,IAAAA,eAAe,CAACX,WAAD,CAAf,GAA+BK,sBAAsB,CACpDC,OADoD,EAEpD/E,KAAK,CAACsB,IAF8C,EAGpDmD,WAHoD,EAIpD,KAJoD,CAArD;EAMA,GATD;EAWA,MAAIG,OAAO,GAA0B,EAArC;;EAGA,MAAI5E,KAAK,CAAC4E,OAAV,EAAmB;EAClBA,IAAAA,OAAO,GACN,OAAO5E,KAAK,CAAC4E,OAAb,KAAyB,UAAzB,GACI5E,KAAK,CAAC4E,OAAN,CAA+CG,OAAO,CAACG,QAAvD,CADJ,GAEGlF,KAAK,CAAC4E,OAHV;EAIA;;EAGD,MAAMU,UAAU,GAAGtE,MAAM,CAACC,IAAP,CAAY2D,OAAZ,CAAnB;EACAU,EAAAA,UAAU,CAACvF,OAAX,CAAmB,UAAC8E,UAAD;EAClBF,IAAAA,mBAAmB,CAAC3E,KAAK,CAACsB,IAAP,EAAasD,OAAb,EAAsBC,UAAtB,CAAnB;EAEAhF,IAAAA,GAAG,CAAC+E,OAAJ,CAAe5E,KAAK,CAACsB,IAArB,SAA6BuD,UAA7B,IAA6CD,OAAO,CAACC,UAAD,CAAP,CAAoBU,IAApB,CAC5CH,eAD4C,CAA7C;EAIAA,IAAAA,eAAe,CAACP,UAAD,CAAf,GAA8BC,sBAAsB,CACnDC,OADmD,EAEnD/E,KAAK,CAACsB,IAF6C,EAGnDuD,UAHmD,EAInD,IAJmD,CAApD;EAMA,GAbD;EAcA,CAlDD;;WC9CwBW,iBAGtB1B;EACD,SAAO;EACNhE,IAAAA,MAAM,EAAE2F,iBAAiB,CAAC3B,MAAM,CAAChE,MAAR,CADnB;EAENQ,IAAAA,WAAW,EAAEwD,MAAM,CAACE,KAFd;EAGNhC,IAAAA,aAHM,yBAGQ0D,MAHR,EAGgBC,EAHhB;EAIL7B,MAAAA,MAAM,CAACC,OAAP,CAAehE,OAAf,CAAuB,UAACoE,MAAD;EACtB,YAAIA,MAAM,CAACuB,MAAD,CAAV,EAAoB;EACnBC,UAAAA,EAAE,CAACxB,MAAM,CAACuB,MAAD,CAAP,CAAF;EACA;EACD,OAJD;EAKA,KATK;EAUNd,IAAAA,OAAO,EAAE;EAVH,GAAP;EAYA;;EAOD,SAASa,iBAAT,CACC3F,MADD;EAGC,SAAOkB,MAAM,CAACC,IAAP,CAAYnB,MAAZ,EAAoB8F,GAApB,CAAwB,UAACpB,SAAD;EAC9B,QAAMxE,KAAK,GAAG6F,gBAAgB,CAACrB,SAAD,EAAa1E,MAAkB,CAAC0E,SAAD,CAA/B,CAA9B;EACAP,IAAAA,aAAa,CAACjE,KAAD,CAAb;EACA,WAAOA,KAAP;EACA,GAJM,CAAP;EAKA;;EAMD,SAAS6F,gBAAT,CACCvE,IADD,EAECtB,KAFD;EAIC;EACCsB,IAAAA,IAAI,EAAJA,IADD;EAECJ,IAAAA,QAAQ,EAAE;EAFX,KAGIlB,KAHJ;EAKA;;WC/BuB8F,mBAGtBhC;EAED,MAAMjE,GAAG,GAAG2F,gBAAgB,CAAC1B,MAAD,CAA5B;EAGAjE,EAAAA,GAAG,CAACS,WAAJ,CAAgBF,WAAhB,CAA4BsD,IAA5B,CAAiCqC,uBAAuB,CAAClG,GAAD,CAAxD;EAGAA,EAAAA,GAAG,CAACmC,aAAJ,CAAkB,kBAAlB,EAAsC,UAACsC,gBAAD;EACrCzE,IAAAA,GAAG,CAACS,WAAJ,CAAgBF,WAAhB,CAA4BsD,IAA5B,CAAiCY,gBAAgB,CAACzE,GAAD,CAAjD;EACA,GAFD;EAIA,MAAMmG,UAAU,GAAGpG,gBAAgB,CAACC,GAAD,CAAnC;;EAEA,MAAIoG,YAAY,gBACZD,UADY;EAEf1E,IAAAA,IAAI,EAAEwC,MAAM,CAACxC,IAFE;EAGf4E,IAAAA,QAHe,oBAGNlG,KAHM;EAIdiE,MAAAA,aAAa,CAACjE,KAAD,CAAb;EACAC,MAAAA,kBAAkB,CAACJ,GAAD,EAAMG,KAAN,CAAlB;EACAmG,MAAAA,YAAY,CAACF,YAAD,EAAepG,GAAf,EAAoBG,KAApB,CAAZ;EACAgG,MAAAA,UAAU,CAACI,cAAX,CAA0BjG,iBAAiB,CAACN,GAAD,CAA3C;EACAmG,MAAAA,UAAU,CAACd,QAAX,CAAoB;EAAExD,QAAAA,IAAI,EAAE;EAAR,OAApB;EACA;EATc,IAAhB;;EAYA2E,EAAAA,UAAU,CAACJ,YAAD,EAAenC,MAAM,CAACC,OAAtB,CAAV;EAGAlE,EAAAA,GAAG,CAACC,MAAJ,CAAWC,OAAX,CAAmB,UAACC,KAAD;EAAA,WAAWmG,YAAY,CAACF,YAAD,EAAepG,GAAf,EAAoBG,KAApB,CAAvB;EAAA,GAAnB;EAEAH,EAAAA,GAAG,CAACmC,aAAJ,CAAkB,gBAAlB,EAAoC,UAACoC,cAAD;EACnC6B,IAAAA,YAAY,GAAG7B,cAAc,CAAC6B,YAAD,EAAepG,GAAf,CAAd,IAAqCoG,YAApD;EACA,GAFD;EAIA,SAAOA,YAAP;EACA;;EAED,SAASF,uBAAT,CAGElG,GAHF;EAIC,SAAO,UAACyG,KAAD;EAAA,WAAW,UAACC,IAAD;EAAA,aAAU,UAAC9E,MAAD;EAC3B,YAAIA,MAAM,CAACC,IAAP,IAAe7B,GAAG,CAAC+E,OAAvB,EAAgC;EAE/B2B,UAAAA,IAAI,CAAC9E,MAAD,CAAJ;EAGA,iBAAQ5B,GAAG,CAAC+E,OAAJ,CAAoBnD,MAAM,CAACC,IAA3B,EACPD,MAAM,CAACE,OADA,EAEP2E,KAAK,CAACE,QAAN,EAFO,EAGP/E,MAAM,CAACG,IAHA,CAAR;EAKA;;EAED,eAAO2E,IAAI,CAAC9E,MAAD,CAAX;EACA,OAdiB;EAAA,KAAX;EAAA,GAAP;EAeA;;EAED,SAAS0E,YAAT,CAKCF,YALD,EAMCpG,GAND,EAOCG,KAPD;EASC,MAAMoF,eAAe,GAAG,EAAxB;EAGAa,EAAAA,YAAY,CAACf,QAAb,MACIlF,KAAK,CAACsB,IADV,IAEI8D,eAFJ;EAIAD,EAAAA,gBAAgB,CAACc,YAAD,EAAepG,GAAf,EAAoBG,KAApB,CAAhB;EAEAH,EAAAA,GAAG,CAACmC,aAAJ,CAAkB,SAAlB,EAA6B,UAACqC,OAAD;EAC5BA,IAAAA,OAAO,CAACrE,KAAD,EAAQiG,YAAR,CAAP;EACA,GAFD;EAGA;;EASD,SAASI,UAAT,CAICC,KAJD,EAKCvC,OALD;EAOCA,EAAAA,OAAO,CAAChE,OAAR,CAAgB,UAACoE,MAAD;EACf,QAAI,CAACA,MAAM,CAACsC,OAAZ,EAAqB;EACrB,QAAMC,UAAU,GAAG1F,MAAM,CAACC,IAAP,CAAYkD,MAAM,CAACsC,OAAnB,CAAnB;EACAC,IAAAA,UAAU,CAAC3G,OAAX,CAAmB,UAAC4G,GAAD;EAClB,UAAI,CAACxC,MAAM,CAACsC,OAAZ,EAAqB;EACrB,UAAMG,WAAW,GAAGzC,MAAM,CAACsC,OAAP,CAAeE,GAAf,CAApB;EAGA,UAAME,iBAAiB,GAAG,OAAOD,WAAP,KAAuB,UAAjD;EAEAN,MAAAA,KAAK,CAACK,GAAD,CAAL,GAAaE,iBAAiB,GAC3B;EAAA,0CAAIC,MAAJ;EAAIA,UAAAA,MAAJ;EAAA;;EAAA,eACCF,WAAsD,MAAtD,UACAN,KADA,SAEGQ,MAFH,EADD;EAAA,OAD2B,GAM3B9F,MAAM,CAAC+F,MAAP,CAAc5C,MAAM,CAACsC,OAAP,CAAeE,GAAf,CAAd,CANH;EAOA,KAdD;EAeA,GAlBD;EAmBA;;ECzID,IAAIK,KAAK,GAAG,CAAZ;AAOA,WAAwBC,aAIvBC;;;EAEA,MAAMC,SAAS,uBAAGD,UAAU,CAAC5F,IAAd,kDAAuC0F,KAAtD;EAEAA,EAAAA,KAAK,IAAI,CAAT;EAEA,MAAMlD,MAAM,GAAG;EACdxC,IAAAA,IAAI,EAAE6F,SADQ;EAEdrH,IAAAA,MAAM,EAAEoH,UAAU,CAACpH,MAAX,IAAqB,EAFf;EAGdiE,IAAAA,OAAO,EAAEmD,UAAU,CAACnD,OAAX,IAAsB,EAHjB;EAIdC,IAAAA,KAAK;EACJ9C,MAAAA,QAAQ,EAAE,EADN;EAEJgB,MAAAA,YAAY,EAAE,EAFV;EAGJ3B,MAAAA,SAAS,EAAE,EAHP;EAIJH,MAAAA,WAAW,EAAE;EAJT,OAKD8G,UAAU,CAAClD,KALV;EAMJvD,MAAAA,cAAc;EACba,QAAAA,IAAI,EAAE6F;EADO,uDAETD,UAAU,CAAClD,KAFF,qBAET,kBAAkBvD,cAFT,oCAE2B,EAF3B;EANV;EAJS,GAAf;EAiBAoD,EAAAA,cAAc,CAACC,MAAD,CAAd;EAGAA,EAAAA,MAAM,CAACC,OAAP,CAAehE,OAAf,CAAuB,UAACoE,MAAD;EACtB,QAAIA,MAAM,CAACL,MAAX,EAAmB;EAElBA,MAAAA,MAAM,CAAChE,MAAP,GAAgBsH,KAAK,CAACtD,MAAM,CAAChE,MAAR,EAAgBqE,MAAM,CAACL,MAAP,CAAchE,MAA9B,CAArB;;EAGA,UAAIqE,MAAM,CAACL,MAAP,CAAcE,KAAlB,EAAyB;EACxBF,QAAAA,MAAM,CAACE,KAAP,CAAapD,YAAb,GAA4BwG,KAAK,CAChCtD,MAAM,CAACE,KAAP,CAAapD,YADmB,EAEhCuD,MAAM,CAACL,MAAP,CAAcE,KAAd,CAAoBpD,YAFY,CAAjC;EAKAkD,QAAAA,MAAM,CAACE,KAAP,CAAa9C,QAAb,GAAwBkG,KAAK,CAC5BtD,MAAM,CAACE,KAAP,CAAa9C,QADe,EAE5BiD,MAAM,CAACL,MAAP,CAAcE,KAAd,CAAoB9C,QAFQ,CAA7B;EAKA4C,QAAAA,MAAM,CAACE,KAAP,CAAa9B,YAAb,GAA4BkF,KAAK,CAChCtD,MAAM,CAACE,KAAP,CAAa9B,YADmB,EAEhCiC,MAAM,CAACL,MAAP,CAAcE,KAAd,CAAoB9C,QAFY,CAAjC;EAKA4C,QAAAA,MAAM,CAACE,KAAP,CAAazD,SAAb,aACIuD,MAAM,CAACE,KAAP,CAAazD,SADjB,EAEK4D,MAAM,CAACL,MAAP,CAAcE,KAAd,CAAoBzD,SAApB,IAAiC,EAFtC;EAKAuD,QAAAA,MAAM,CAACE,KAAP,CAAa5D,WAAb,aACI0D,MAAM,CAACE,KAAP,CAAa5D,WADjB,EAEK+D,MAAM,CAACL,MAAP,CAAcE,KAAd,CAAoB5D,WAApB,IAAmC,EAFxC;EAKA0D,QAAAA,MAAM,CAACE,KAAP,CAAaxB,eAAb,GACCsB,MAAM,CAACE,KAAP,CAAaxB,eAAb,IAAgC2B,MAAM,CAACL,MAAP,CAAcE,KAAd,CAAoBxB,eADrD;EAGAsB,QAAAA,MAAM,CAACE,KAAP,CAAatD,WAAb,GACCoD,MAAM,CAACE,KAAP,CAAatD,WAAb,IAA4ByD,MAAM,CAACL,MAAP,CAAcE,KAAd,CAAoBtD,WADjD;EAEA;EACD;;EAEDwD,IAAAA,cAAc,CAACC,MAAD,CAAd;EACA,GAzCD;EA2CA,SAAOL,MAAP;EACA;;EAMD,SAASsD,KAAT,CAGEC,QAHF,EAGeC,KAHf;EAIC,SAAOA,KAAK,gBAAQA,KAAR,EAAkBD,QAAlB,IAA+BA,QAA3C;EACA;;MCxFYE,IAAI,GAAG,SAAPA,IAAO,CAInBL,UAJmB;EAMnB,MAAMpD,MAAM,GAAGmD,YAAY,CAACC,UAAU,IAAI,EAAf,CAA3B;EACA,SAAOpB,kBAAkB,CAAChC,MAAD,CAAzB;EACA,CARM;AAUP,MAAa0D,WAAW,GAAiB,SAA5BA,WAA4B;EAAA,SAAM,UAACC,EAAD;EAC9C,uBAAwCA,EAAxC,CAAQvG,QAAR;EAAA,QAAQA,QAAR,6BAAmB,EAAnB;EAAA,sBAAwCuG,EAAxC,CAAuB7C,OAAvB;EAAA,QAAuBA,OAAvB,4BAAiC,EAAjC;EAEA,wBACI6C,EADJ;EAECvG,MAAAA,QAAQ,EAARA,QAFD;EAGC0D,MAAAA,OAAO,EAAPA;EAHD;EAKA,GARwC;EAAA,CAAlC;AAUP,cAAe;EACd2C,EAAAA,IAAI,EAAJA,IADc;EAEdC,EAAAA,WAAW,EAAXA;EAFc,CAAf;;;;;;;;;;;;;;"}